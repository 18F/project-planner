version: '2'
services:
  drupal-web:
    hostname: drupal-web
    build:
      context: .
      dockerfile: ./docker/apache-php/Dockerfile
    #restart: always
    expose:
      - "8080"
    ports:
      - "8080:80"
    depends_on:
      - drupal-postgres
    links:
      - drupal-postgres:postgres
    environment:
      DOCKER_IMAGE: "apache-php"
      APP_FILES_REGION: "{{AWS_FILES_REGION}}"
      VCAP_SERVICES: >-
        {
          "docker-postgres": [{
            "name": "pgsql",
            "tags": ["postgresql"],
            "credentials": {
              "host": "postgres",
              "port": 5432,
              "username": "drupal",
              "password": "drupal",
              "db_name": "drupal"
            }
          }],
          "docker-s3": [{
            "name": "s3",
            "tags": ["S3"],
            "credentials": {
              "access_key_id": "{{AWS_ACCESS_KEY_ID}}",
              "secret_access_key": "{{AWS_SECRET_ACCESS_KEY}}",
              "bucket": "{{AWS_FILES_BUCKET}}",
              "region": "{{AWS_FILES_REGION}}"
            }
          }]
        }
      DRUPAL_THEME: "bootstrap_18f"
      DRUPAL_DB: "bootstrap"
      DRUPAL_SALT: "true"
      DRUPAL_INIT: "true"
      DRUPAL_SYNC: "true"
      HOME: "/root"
      AWS_S3_ENDPOINT: "{{AWS_S3_ENDPOINT}}"
    volumes:
      - .:/var/www
  drupal-postgres:
    hostname: drupal-postgres
    image: postgres:latest
    restart: always
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: drupal
      POSTGRES_PASSWORD: drupal
      POSTGRES_DB: drupal
    volumes:
      - drupal-data:/var/lib/postgresql
volumes:
  drupal-data:
    external: false
